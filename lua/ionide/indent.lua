-- --translate this vimscript to lua:
-- -- if exists("b:did_indent")
-- --     finish
-- -- end
-- -- let b:did_indent = 1
-- local M = {}
--
-- -- if vim.b.did_indent then
-- --   return
-- -- end
-- -- vim.b.did_indent = 1
-- --
-- -- vim.api.nvim_buf_set_var(0, "indentexpr", function()
-- --   GetFsharpIndent()
-- -- end)
-- -- vim.bo.indentkeys =
-- --   [[0=and,0=class,0=constraint,0=done,0=else,0=end,0=exception,0=external,0=if,0=in,0=include,0=inherit,0=let,0=method,0=open,0=then,0=type,0=val,0=with,0;;,0>\],0\|\],0>},0\|,0},0\],0)]]
-- --
-- -- -- " Only define the function once.
-- --
-- -- if vim.b.did_indent then
-- --   return
-- -- end
--
-- function M.GetLineWithoutFullComment(lnum)
--   lnum = vim.fn.prevnonblank(lnum - 1)
--   local lline = vim.fn.getline(lnum):gsub([[(\*.*\*)\s*$]], "")
--   while (lline:match([[^\s*$]]) == nil) and (lnum > 0) do
--     lnum = vim.fn.prevnonblank(lnum - 1)
--     lline = vim.fn.getline(lnum):gsub([[(\*.*\*)\s*$]], "")
--   end
--   return lnum
-- end
--
-- function M.GetInd(lnum, pat, lim)
--   local llet = vim.fn.search(pat, "bW")
--   local old = vim.fn.indent(lnum)
--   while llet > 0 do
--     old = vim.fn.indent(llet)
--     local nb = M.GetLineWithoutFullComment(llet)
--     if vim.fn.getline(nb) ~= lim then
--       return old
--     end
--     llet = vim.fn.search(pat, "bW")
--   end
--   return old
-- end
--
-- -- Indent pairs
-- function M.FindPair(pstart, pmid, pend)
--   vim.api.nvim_command([[call search("]] .. pend .. [[", "bW")]])
--   return vim.api.nvim_call_function("indent", {
--     vim.api.nvim_call_function(
--       "searchpair",
--       { pstart, pmid, pend, "bWn", [[synIDattr(synID(line("."), col("."), 0), "name") =~? "string\\|comment"]] }
--     ),
--   })
-- end
--
-- -- Indent 'let'
-- function M.FindLet(pstart, pmid, pend)
--   vim.api.nvim_command([[call search("]] .. pend .. [[", "bW")]])
--   return vim.api.nvim_call_function("indent", {
--     vim.api.nvim_call_function("searchpair", {
--       pstart,
--       pmid,
--       pend,
--       "bWn",
--       [[synIDattr(synID(line("."), col("."), 0), "name") =~? "string\\|comment" || getline(".") =~ "^\\s*let\\>.*=.*\\<in\\s*$" || getline(prevnonblank(".") - 1) =~ s.beflet"]],
--     }),
--   })
-- end
-- local function indent(lineNum)
--   return vim.fn.indent(lineNum)
-- end
--
-- local function searchpair(pstart, pmid, pend, flags, skip, stopline, timeout)
--   return vim.fn.searchpair(pstart, pmid, pend, flags, skip, stopline, timeout)
-- end
--
-- local function getline(lineNum)
--   return vim.fn.getline(lineNum)
-- end
-- -- " Indent "let") then
-- function M.GetFsharpIndent()
--   -- " Find a non-commented line above the current line.
--   local lnum = M.GetLineWithoutFullComment(lnum)
--
--   --     " At the start of the file use zero indent.
--   if lnum == 0 then
--     return 0
--   end
--
--   local ind = indent(lnum)
--   local lline = string.gsub(getline(lnum), [[(\*.*\*)\s*]], "", "")
--
--   return ind
-- end
--
-- return M
-- -- " vim: sw=4 et sts=
